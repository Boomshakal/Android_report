package com.megmeet.megmeetreport;

import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.support.v4.view.ViewPager;
import android.support.v7.app.AppCompatActivity;
import android.util.Log;
import android.view.Window;
import android.view.WindowManager;

import com.megmeet.megmeetreport.bean.SQLBean;
import com.megmeet.megmeetreport.fragment.ReportFragment;
import com.megmeet.megmeetreport.sql.Parameters;
import com.megmeet.megmeetreport.sql.SQLConnect;
import com.megmeet.megmeetreport.util.InformationUtils;

import java.util.ArrayList;

public class ReportActivity extends AppCompatActivity {
    ArrayList<Fragment> fragments = new ArrayList<>();
    private int mUpdateTime = 1 * 60 * 1000;  //数据更新时间
    private int scrollTime = 1 * 60 * 1000;  //数据更新时间
    private int countFragment = 1;          //获取看板的页数

    ViewPager viewpager;
    private Handler handlerRunnable;
    private Runnable updateRunnable = new Runnable() {
        @Override
        public void run() {
            initDatas();
            handler.postDelayed(updateRunnable, mUpdateTime);
        }
    };
    private Runnable scrollRunnable = new Runnable() {
        @Override
        public void run() {
            if (reportAdapter != null) {
                int childCount = reportAdapter.getCount();
                int currentItem = viewpager.getCurrentItem();
                Log.e("len", childCount + "**" + currentItem);
                if (currentItem < childCount - 1) {
                    viewpager.setCurrentItem(currentItem + 1);
                } else {
                    viewpager.setCurrentItem(0);
                }
                handler.postDelayed(scrollRunnable, scrollTime);
            }
        }
    };
    private Handler handler = new Handler() {
        @Override
        public void handleMessage(Message msg) {
            ArrayList<SQLBean> sqlBeans = (ArrayList<SQLBean>) msg.obj;
            for (int i = 0; i < sqlBeans.size(); i++) {
                ReportFragment reportFragment = new ReportFragment();
                reportFragment.setUrl(sqlBeans.get(i).getUrl());
                int updateTime = sqlBeans.get(i).getUpdateTime();
                if (updateTime > 0) {
                    mUpdateTime = updateTime * 60 * 1000;
                }
                fragments.add(reportFragment);
            }
            if (reportAdapter == null) {
                reportAdapter = new ReportAdapter(getSupportFragmentManager(), fragments);
            }
            viewpager.setAdapter(reportAdapter);
            countFragment = sqlBeans.size();
            handlerRunnable.postDelayed(scrollRunnable, scrollTime);
        }
    };
    private ReportAdapter reportAdapter;

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
        setContentView(R.layout.activity_report);
        viewpager = findViewById(R.id.viewpager);
        handlerRunnable = new Handler();
        handlerRunnable.post(updateRunnable);
    }

    private void initDatas() {
        //通过MAC地址获取数据
        new Thread() {
            @Override
            public void run() {
                String sql = "exec fm_get_kanban_by_mac_address ?";
                Parameters parameters = new Parameters().add(1, InformationUtils.getInformationUtils().getMacAddress());
                ArrayList<SQLBean> sqlBeans = SQLConnect.connectSQL(sql, parameters);
                if (sqlBeans.size() > 0) {
                    Message message = new Message();
                    message.arg1 = 0;
                    message.obj = sqlBeans;
                    handler.sendMessage(message);
                } else {
                    Log.e("len", "NULLNULL");
                }
            }
        }.start();
    }
}
